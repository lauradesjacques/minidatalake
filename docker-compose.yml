version: '3.8'

services:
  airflow-webserver:
    build:
      context: .
      dockerfile: docker/Dockerfile.airflow
    command: webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
      - AIRFLOW__CORE__FERNET_KEY=''
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./minilake.duckdb:/opt/airflow/minilake.duckdb
      - airflow-logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    build:
      context: .
      dockerfile: docker/Dockerfile.airflow
    command: scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
      - AIRFLOW__CORE__FERNET_KEY=''
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./minilake.duckdb:/opt/airflow/minilake.duckdb
      - airflow-logs:/opt/airflow/logs

  streamlit:
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    ports:
      - "8503:8501"
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./minilake.duckdb:/app/minilake.duckdb
    environment:
      - PYTHONPATH=/app
    depends_on:
      - airflow-webserver

volumes:
  airflow-logs: 